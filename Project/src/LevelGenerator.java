public class LevelGenerator {

    public final int numberOfLevels = 3;

    public char[][] generateLevel(int level) {
        char[][] grid;

        switch (level) {
            case 1:
                grid = getLevelOne();
                break;
            case 2:
                grid = getLevelTwo();
                break;
            case 3:
                grid = getLevelThree();
                break;
            default:
                grid = null;
        }
        return grid;
    }

    private char[][] getLevelOne() {
        char[][] gridOne = new char[][]{
                {'█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█'},
                {'█', ' ', ' ', ' ', '█', ' ', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', '█'},
                {'█', ' ', '█', ' ', ' ', ' ', '█', '█', '█', ' ', '█', ' ', ' ', ' ', '█', '█'},
                {'█', ' ', '█', '█', '█', ' ', ' ', '█', ' ', '█', '█', '█', ' ', ' ', ' ', '█'},
                {'█', '█', ' ', ' ', '█', '█', ' ', '█', '█', ' ', ' ', ' ', ' ', '█', ' ', '█'},
                {'█', ' ', ' ', '█', '█', ' ', ' ', ' ', ' ', ' ', ' ', '█', '█', ' ', ' ', '✻'},
                {'█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█'}
        };

        return gridOne;
    }

    private char[][] getLevelTwo() {
        char[][] gridTwo = new char[][]{
                {'█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█','█', '█', '█', '█', '█', '█', '█', '█', '█', '█'},
                {'█', ' ', '█', ' ', '█', '█', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', ' ', '█'},
                {'█', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '█', ' ', '█', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', ' ', ' ', '█', '█'},
                {'█', ' ', '█', ' ', '█', '█', '█', '█', ' ', ' ', '█', ' ', '█', '█', '█', '█', '█', ' ', '█', ' ', '█', '█', '█', '█'},
                {'█', ' ', '█', ' ', '█', ' ', ' ', '█', '█', '█', ' ', ' ', ' ', '█', '█', ' ', '█', '█', '█', '█', ' ', ' ', ' ', '█'},
                {'█', ' ', '█', ' ', '█', ' ', '█', ' ', '█', ' ', '█', '█', ' ', ' ', ' ', '█', ' ', '█', ' ', '█', '█', ' ', '█', '█'},
                {'█', '█', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', '█', '█', ' ', ' ', ' ', ' ', ' ', '█', '█', ' ', '█'},
                {'█', ' ', ' ', ' ', '█', ' ', '█', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', ' ', '█', '█', ' ', ' ', '█', '█', '█', '█'},
                {'█', '█', ' ', '█', ' ', ' ', ' ', '█', ' ', '█', ' ', ' ', '█', ' ', ' ', '█', '█', '█', ' ', '█', '█', ' ', '█', '█'},
                {'█', '█', ' ', '█', '█', '█', ' ', ' ', ' ', '█', '█', ' ', ' ', ' ', '█', '█', '█', ' ', ' ', '█', '█', ' ', ' ', '█'},
                {'█', ' ', ' ', '█', '█', ' ', '█', '█', '█', ' ', ' ', ' ', '█', ' ', ' ', '█', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '✻'},
                {'█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█','█', '█', '█', '█', '█', '█', '█', '█', '█', '█'}
        };
        return gridTwo;
    }

    private char[][] getLevelThree() {
        char[][] gridThree = new char[][]{
                {'█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█','█', '█', '█', '█', '█', '█', '█', '█', '█', '█'},
                {'█', ' ', '█', ' ', '█', '█', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', ' ', '█'},
                {'█', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '█', ' ', '█', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', ' ', ' ', '█', '█'},
                {'█', ' ', '█', ' ', '█', '█', '█', '█', ' ', ' ', '█', ' ', '█', '█', '█', '█', '█', ' ', '█', ' ', '█', '█', '█', '█'},
                {'█', ' ', '█', ' ', '█', ' ', ' ', '█', '█', '█', ' ', ' ', ' ', '█', '█', ' ', '█', '█', '█', '█', ' ', ' ', ' ', '█'},
                {'█', ' ', '█', ' ', '█', ' ', '█', ' ', '█', ' ', '█', '█', ' ', ' ', ' ', '█', ' ', '█', ' ', '█', '█', ' ', '█', '█'},
                {'█', '█', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', '█', '█', ' ', ' ', ' ', ' ', ' ', '█', '█', ' ', '█'},
                {'█', ' ', ' ', ' ', '█', ' ', '█', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', ' ', '█', '█', ' ', ' ', '█', '█', '█', '█'},
                {'█', '█', ' ', '█', ' ', ' ', ' ', '█', ' ', '█', ' ', ' ', '█', ' ', ' ', '█', '█', '█', ' ', '█', '█', ' ', '█', '█'},
                {'█', '█', ' ', '█', '█', '█', ' ', ' ', ' ', '█', '█', ' ', ' ', ' ', '█', '█', '█', ' ', ' ', '█', '█', ' ', ' ', '█'},
                {'█', ' ', ' ', '█', '█', ' ', '█', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '█'},
                {'█', '█', ' ', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', ' ','█', ' ', '█', '█', '█', '█', '█', '█', '█', '█'},
                {'█', '█', ' ', '█', ' ', ' ', '█', ' ', '█', ' ', ' ', ' ', ' ', '█','█', ' ', '█', ' ', '█', '█', ' ', '█', ' ', '█'},
                {'█', ' ', '█', ' ', '█', '█', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', ' ', '█'},
                {'█', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '█', ' ', '█', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', ' ', ' ', '█', '█'},
                {'█', ' ', '█', ' ', '█', '█', '█', '█', ' ', ' ', '█', ' ', '█', '█', '█', '█', '█', ' ', '█', ' ', '█', '█', '█', '█'},
                {'█', ' ', '█', ' ', '█', ' ', ' ', '█', '█', '█', ' ', ' ', ' ', '█', '█', ' ', '█', '█', '█', '█', ' ', ' ', ' ', '█'},
                {'█', ' ', '█', ' ', '█', ' ', '█', ' ', '█', ' ', '█', '█', ' ', ' ', ' ', '█', ' ', '█', ' ', '█', '█', ' ', '█', '█'},
                {'█', '█', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', '█', ' ', ' ', '█', '█', ' ', ' ', ' ', ' ', ' ', '█', '█', ' ', '█'},
                {'█', ' ', ' ', ' ', '█', ' ', '█', '█', ' ', ' ', ' ', '█', ' ', ' ', ' ', ' ', '█', '█', ' ', ' ', '█', '█', '█', '█'},
                {'█', '█', ' ', '█', ' ', ' ', ' ', '█', ' ', '█', ' ', ' ', '█', ' ', ' ', '█', '█', '█', ' ', '█', '█', ' ', '█', '█'},
                {'█', '█', ' ', '█', '█', '█', ' ', ' ', ' ', '█', '█', ' ', ' ', ' ', '█', '█', '█', ' ', ' ', '█', '█', ' ', ' ', '█'},
                {'█', ' ', ' ', '█', '█', ' ', '█', '█', '█', ' ', ' ', ' ', '█', ' ', ' ', '█', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '✻'},
                {'█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█', '█','█', '█', '█', '█', '█', '█', '█', '█', '█', '█'}
        };
        return gridThree;
    }
}